{"ast":null,"code":"import axios from 'axios';\nconst API_KEY = 'expb_1234567890abcdef'; // Tu clave API\nconst BASE_URL = '/api'; // Usa una ruta relativa para que el proxy de React la maneje\n\nconst apiClient = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'x-api-key': API_KEY\n  }\n});\nexport const getBots = async () => {\n  try {\n    const response = await apiClient.get('/bots');\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching bots:\", error);\n    throw error;\n  }\n};\nexport const sendMessage = async payload => {\n  try {\n    const response = await fetch('/api/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-api-key': API_KEY\n      },\n      body: JSON.stringify(payload)\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error sending message:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_KEY","BASE_URL","apiClient","create","baseURL","headers","getBots","response","get","data","error","console","sendMessage","payload","fetch","method","body","JSON","stringify","ok","Error","status","json"],"sources":["P:/expertbot-hub/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'expb_1234567890abcdef'; // Tu clave API\nconst BASE_URL = '/api'; // Usa una ruta relativa para que el proxy de React la maneje\n\nconst apiClient = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'x-api-key': API_KEY,\n  },\n});\n\nexport const getBots = async () => {\n  try {\n    const response = await apiClient.get('/bots');\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching bots:\", error);\n    throw error;\n  }\n};\n\nexport const sendMessage = async (payload) => {\n  try {\n    const response = await fetch('/api/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-api-key': API_KEY,\n      },\n      body: JSON.stringify(payload),\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error sending message:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB,CAAC,CAAC;AACzC,MAAMC,QAAQ,GAAG,MAAM,CAAC,CAAC;;AAEzB,MAAMC,SAAS,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC7BC,OAAO,EAAEH,QAAQ;EACjBI,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,WAAW,EAAEL;EACf;AACF,CAAC,CAAC;AAEF,OAAO,MAAMM,OAAO,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,SAAS,CAACM,GAAG,CAAC,OAAO,CAAC;IAC7C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,MAAOC,OAAO,IAAK;EAC5C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMO,KAAK,CAAC,WAAW,EAAE;MACxCC,MAAM,EAAE,MAAM;MACdV,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,WAAW,EAAEL;MACf,CAAC;MACDgB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;IAC9B,CAAC,CAAC;IACF,IAAI,CAACN,QAAQ,CAACY,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBb,QAAQ,CAACc,MAAM,EAAE,CAAC;IAC3D;IACA,OAAO,MAAMd,QAAQ,CAACe,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}